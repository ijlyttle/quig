name: Release and Upload

on:  
  push:
    tags: 
      - "*"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - name: Create release
        id: create-release
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const fs = require("fs");

            const tag = context.ref.replace("refs/tags/", "");
            const response = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `${tag}`,
              name: `${context.repo.repo} ${tag.replace(/^v/, "")}`,
              target_commitish: context.sha,
              body: ""
            });

            const result = response.data.id;
            return result;

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build tarball
        id: build-tarball
        run: |
          filepath=$(src/build-tarball.sh)
          echo filepath
          echo "filepath=$filepath" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const fs = require("fs");

            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ steps.create-release.outputs.result }},
              name: "quig.tar.gz",
              data: await fs.readFileSync("../quig.tar.gz")
            });            

